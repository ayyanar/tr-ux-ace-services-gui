/*
 * Unpublished work Â© 2019 DXC Technology Company.
 * All rights reserved.
 * Use, duplication, and/or alteration is subject to license terms.
 */
export class RuleRq {
}
export class Rule {
}
export class Action {
}
export class Condition {
}
export class AvailabilityAdjustmentActionInput {
}
export class BidPriceActionInput {
}
export class Categories {
}
export class BidPriceSeat {
}
export class ClassClosureActionInput {
}
export class ClassSuppressionActionInput {
}
export class AllowPartialCancelationActionInput {
}
export class JourneyDataControlActionInput {
}
export class MarketFareActionInput {
}
export class DateTimeCondition {
}
export class DateOrRange {
}
export class CarrierCondition {
}
export class ClassCondition {
}
export class ClassBookingCondition extends ClassCondition {
}
export class ClassAvailabilityCondition extends ClassCondition {
}
export class Seat {
}
export class ConnectionPointCondition {
}
export class ConnectionCity {
}
export class ConnectionCityAirport {
}
export class TimeConnectionCity {
}
export class EquipmentCondition {
}
export class FlightCondition {
}
export class CarrierFlightCondition {
}
export class CarrierFlight {
}
export class Flight {
}
export class PassengerLoyaltyCondition {
}
export class PassengerLoyalty {
}
export class LoadFactorCondition {
}
export class MarketCondition {
}
export class Market {
}
export class PointOfCommencementCondition {
}
export class PointOfSaleCondition {
}
export class RoutingCondition {
}
export class Routing {
}
export class TimeDepartureCondition {
}
export class Time {
}
export class RuleRs {
}
export class RuleSummary {
}
export class ChildRule {
}
// fcb
export class TypeOfSegment {
}
export class DisplayOrderAction {
}
export class FcbDisplayOrderActionInput {
}
export class FcbIncludeExcludeConnectionsActionInput {
}
export class FcbConnectionOverrideActionInput {
}
export class FcbFlightAndCarrierSuppressionActionInput {
}
//# sourceMappingURL=data:application/json;base64,